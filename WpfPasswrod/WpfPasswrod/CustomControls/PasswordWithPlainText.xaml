<UserControl x:Class="WpfPasswrod.CustomControls.PasswordWithPlainText"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:input="clr-namespace:System.Windows.Input;assembly=PresentationCore"
             xmlns:local="clr-namespace:WpfPasswrod.CustomControls"
             Name="uc" Foreground="Black"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <VisualBrush x:Key="HelpBrush" TileMode="None" Opacity="0.3" Stretch="None" AlignmentY="Center" 
                     AlignmentX="{Binding AlignmentX,ElementName=uc}"
                     ViewportUnits="RelativeToBoundingBox">
                <VisualBrush.Viewport>
                    <Rect X="0.01" Y="0" Width="1" Height="1"></Rect>
                </VisualBrush.Viewport>
                <VisualBrush.Visual>
                    <TextBlock VerticalAlignment="Stretch" HorizontalAlignment="Left" 
                               TextAlignment="{Binding TextAlignment,ElementName=uc}"
                           Foreground="{Binding Foreground,ElementName=uc}"
                           Text="{Binding Hint,ElementName=uc}"
                           FontSize="{Binding FontSize,ElementName=uc}"/>
                </VisualBrush.Visual>
            </VisualBrush>

            <SolidColorBrush x:Key="ImageToggleButton.Static.Background" Color="#FFDDDDDD"/>
            <SolidColorBrush x:Key="ImageToggleButton.Static.Border" Color="#FF707070"/>
            <SolidColorBrush x:Key="ImageToggleButton.MouseOver.Background" Color="#FFBEE6FD"/>
            <SolidColorBrush x:Key="ImageToggleButton.IsChecked.Background" Color="#FFBEE6FD"/>


            <Style TargetType="{x:Type local:ImageToggleButton}">
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="UseLayoutRounding" Value="True"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="Background" Value="{StaticResource ImageToggleButton.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ImageToggleButton.Static.Border}"/>
                <Setter Property="Cursor" Value="Hand"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:ImageToggleButton}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                UseLayoutRounding="True"
                CornerRadius="{Binding Path=CornerRadius, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Grid>
                                    <Image x:Name="image"  Focusable="False" Margin="0,1,0,0"
                       Source="{Binding NormalImage, RelativeSource={RelativeSource TemplatedParent}}"
                       HorizontalAlignment="Center" VerticalAlignment="Center" Height="20" Width="20"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource ImageToggleButton.IsChecked.Background}"/>
                                    <Setter TargetName="image" Property="Source" Value="{Binding UnImage, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Trigger>
                                <!--<Trigger Property="IsChecked" Value="false">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource ImageRadioButton.IsChecked.Background}"/>
                                    <Setter TargetName="image" Property="Source" Value="{Binding NormalImage, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Trigger>-->
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource ImageToggleButton.MouseOver.Background}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>
    <Border BorderThickness="1" BorderBrush="{Binding BorderBrush,ElementName=uc}"
            CornerRadius="{Binding CornerRadius,ElementName=uc}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Image Source="{Binding IconImage,ElementName=uc}" Margin="4,0"
                   HorizontalAlignment="Center" VerticalAlignment="Center" Height="20" Width="20"/>
            <TextBox Name="tbPlainText" Grid.Column="1" 
                     Text="{Binding Password,Mode=TwoWay,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:PasswordWithPlainText}}"
                 FontSize="{Binding FontSize,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:PasswordWithPlainText}}" 
                     TextAlignment="{Binding AlignmentX,ElementName=uc}"
                 BorderThickness="0" HorizontalAlignment="Stretch" VerticalAlignment="Center" Visibility="Collapsed"
                 input:InputMethod.IsInputMethodEnabled="False" 
                 Foreground="{Binding Foreground,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:PasswordWithPlainText}}"
                 CaretBrush="{Binding CaretBrush,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:PasswordWithPlainText}}">
                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Setter Property="Background" Value="{Binding ElementName=textBox, Path=Background}"/>
                        <Style.Triggers>
                            <Trigger Property="Text" Value="{x:Null}">
                                <Setter Property="Background" Value="{StaticResource HelpBrush}"/>
                            </Trigger>
                            <Trigger Property="Text" Value="">
                                <Setter Property="Background" Value="{StaticResource HelpBrush}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>

            <PasswordBox Name="pwdCiphertext"  Grid.Column="1" local:PasswordBoxHelper.Attach="True" 
                         TextBlock.TextAlignment="{Binding AlignmentX,ElementName=uc}"
                     local:PasswordBoxHelper.Password="{Binding Password,Mode=TwoWay,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:PasswordWithPlainText}}"
                     FontSize="{Binding FontSize,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:PasswordWithPlainText}}"
                     BorderThickness="0" Background="{StaticResource HelpBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                     PasswordChanged="pwdCiphertext_PasswordChanged"
                     Foreground="{Binding Foreground,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:PasswordWithPlainText}}"
                     CaretBrush="{Binding CaretBrush,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:PasswordWithPlainText}}"/>

            <local:ImageToggleButton Grid.Column="2" Width="30"
                                    NormalImage="/WpfPasswrod;component/Resources/Eye_50px.png"
                                    UnImage="/WpfPasswrod;component/Resources/Invisible_50px.png"
                                   Checked="ImageRadioButton_Checked"
                                  Unchecked="ImageRadioButton_Unchecked"/>
        </Grid>
    </Border>
    
</UserControl>
